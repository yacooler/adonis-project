1) Всё еще остались вопросы с созданием полей для обеспечения людей едой и передаче в них null - вроде бы я сделал всё 1 в 1, 
  но поля при false не создаются (картинка в дискорде)
2) Вопрос (скорее заметка) по выведению типов - TS не выводит типы из группы с merge, если я обращаюсь в контроллере activities_controller к payload 
  - TS знает только о типах, поля для которых указаны явно в создании основного валидатора объекта (я отметил их комментарием).
3) Будет ли правильным, вместо последовательных await, параллелить некоторые запросы из контроллера? По идее они могут идти параллельно.
   const [found, payload] = await Promise.all([Speaker.findOrFail(params.id), request.validateUsing(speakerValidator)]);
4) Верификация перед делитом - при удалении сущности можно попробовать поискать все связи с ней в виде зависимости, 
  чтобы не падать с ошибкой 500 (по foreign key в БД). Как это лучше сделать архитектурно? 
5) Хотелось бы попробовать сделать extra колонки частью ключа - сейчас, например, я не могу два раза добавить одного и того же спикера, но в разное время
6) Тайпскрипт в правиле валидации - не осилил, но сильно старался. Пришлось делать через any или unknown. Там же, не осилил проверку на типы в маперах
7) Не работает реэкспорт кортроллера из папки activities_controller, в router все равно пришлось прописать полный путь
8) Вопрос DTO - очевидно, что гонять на клиента полный набор полей того же спикера - бессмысленная трата сети. А если таких записей будет сотня? 
  Как правильнее архитектурно сделать data transfer object маппер, куда его поставить? Именно активный мапер на выбор, не просто выкидывание полей в сериализации